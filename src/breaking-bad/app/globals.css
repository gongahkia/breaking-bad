/* globals.css */

/* Adding tailwind shit */

@import "tailwindcss";
@config "../tailwind.config.js";

/* Import Inter font for a modern, readable look */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');

/* These !important declarations are generally bad practice as they can override Tailwind
   and make debugging harder. If you are using Tailwind classes directly in your JSX,
   you likely don't need these here. However, I'm keeping them as they were in your
   original file to avoid breaking other parts you might rely on, but be aware. */
.flex {
  display: flex !important;
}

.h-full {
  height: 100% !important;
}

.overflow-hidden {
  overflow: hidden !important;
}

.w-96 {
  width: 24rem !important;
}

/* Color Variables: Light & Dark Mode */
:root {
  --background: #f7fafc;
  --foreground: #1a202c;
  --primary: #2563eb;
  --primary-hover: #1d4ed8;
  --secondary: #64748b;
  --accent: #f59e0b;
  --success: #10b981;
  --error: #ef4444;
  --border: #e5e7eb;
  --input-bg: #fff;
  --input-border: #e5e7eb;
  --input-focus: #2563eb22;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #18181b;
    --foreground: #f3f4f6;
    --primary: #60a5fa;
    --primary-hover: #3b82f6;
    --secondary: #94a3b8;
    --accent: #fbbf24;
    --success: #34d399;
    --error: #f87171;
    --border: #27272a;
    --input-bg: #22223a;
    --input-border: #27272a;
    --input-focus: #60a5fa33;
  }
}

html, body {
  /* CRITICAL CHANGE: Remove min-height: 100vh; */
  height: 100%; /* Set to 100% to fill parent's height */
  width: 100%;
  background: var(--background);
  color: var(--foreground);
  font-family: 'Inter', system-ui, sans-serif;
  font-size: 16px;
  line-height: 1.6;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  /* Add overflow-x: hidden to prevent horizontal scrolling of the entire page */
  overflow-x: hidden;
  /* Optional: If you want to force vertical scrolling on the body when content exceeds,
     you could use overflow-y: auto; but OptionCalculatorWrapper handles its own overflow. */
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

a {
  color: var(--primary);
  text-decoration: none;
  transition: color 0.2s;
  font-weight: 500;
}
a:hover, a:focus {
  color: var(--primary-hover);
  text-decoration: underline;
  outline: none;
}

h1, h2, h3, h4, h5, h6 {
  color: var(--foreground);
  font-weight: 700;
  line-height: 1.2;
  margin-bottom: 0.6em;
  letter-spacing: -0.01em;
}

p {
  margin-bottom: 1em;
}

input, select, textarea {
  font-family: inherit;
  font-size: 1rem;
  padding: 0.75em 1em;
  border-radius: 0.75rem;
  border: 1px solid var(--input-border);
  background: var(--input-bg);
  color: var(--foreground);
  box-shadow: none;
  transition: border 0.2s, box-shadow 0.2s;
  outline: none;
}

input:focus, select:focus, textarea:focus {
  border-color: var(--primary);
  box-shadow: 0 0 0 2px var(--input-focus);
}

input[disabled], select[disabled], textarea[disabled] {
  background: #f1f5f9;
  color: #a0aec0;
  cursor: not-allowed;
}

button {
  font-family: inherit;
  font-size: 1rem;
  font-weight: 600;
  padding: 0.75em 1.5em;
  border-radius: 0.75rem;
  border: none;
  background: var(--primary);
  color: #fff;
  cursor: pointer;
  transition: background 0.2s, box-shadow 0.2s;
  box-shadow: none;
  outline: none;
  display: inline-block;
}

button:hover, button:focus {
  background: var(--primary-hover);
  box-shadow: 0 2px 8px 0 rgba(37, 99, 235, 0.08);
}

button[disabled] {
  background: var(--border);
  color: var(--secondary);
  cursor: not-allowed;
}

label {
  font-weight: 500;
  color: var(--foreground);
  margin-bottom: 0.3em;
  display: block;
}

hr {
  border: none;
  border-top: 1px solid var(--border);
  margin: 2em 0;
}

::-webkit-input-placeholder { color: #a0aec0; }
::-moz-placeholder { color: #a0aec0; }
:-ms-input-placeholder { color: #a0aec0; }
::placeholder { color: #a0aec0; }

@media (max-width: 600px) {
  html, body {
    font-size: 15px;
  }
}

/* Remove number input spinners for a cleaner look */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type="number"] {
  -moz-appearance: textfield;
}

/* For accessibility: focus ring */
:focus-visible {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
}

/* Hide scrollbars for a cleaner look (optional) */
body {
  scrollbar-width: thin;
  scrollbar-color: var(--primary) var(--background);
}
body::-webkit-scrollbar {
  width: 8px;
  background: var(--background);
}
body::-webkit-scrollbar-thumb {
  background: var(--primary);
  border-radius: 8px;
}