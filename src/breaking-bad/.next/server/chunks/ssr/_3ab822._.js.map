{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/angry/Desktop/coding/projects/breaking-bad/src/breaking-bad/app/option-calculator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/option-calculator.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/option-calculator.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/angry/Desktop/coding/projects/breaking-bad/src/breaking-bad/app/option-calculator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/option-calculator.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/option-calculator.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/angry/Desktop/coding/projects/breaking-bad/src/breaking-bad/app/page.tsx"],"sourcesContent":["import OptionCalculator from './option-calculator'\r\n\r\nexport default function Home() {\r\n  return <OptionCalculator />\r\n}"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBAAO,8OAAC,4HAAA,CAAA,UAAgB;;;;;AAC1B"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///mnt/c/Users/angry/Desktop/coding/projects/breaking-bad/src/breaking-bad/app/actions/calculate.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport * as ss from 'simple-statistics';\r\n\r\ninterface OptionInputs {\r\n  stockPrice: number;\r\n  strikePrice: number;\r\n  interestRate: number;\r\n  dividendYield: number;\r\n  timeToExpiration: number;\r\n  volatility: number;\r\n}\r\n\r\n// Use simple-statistics to compute the normal CDF via the error function\r\nfunction normalCDF(x: number): number {\r\n  return 0.5 * (1 + ss.erf(x / Math.SQRT2));\r\n}\r\n\r\nexport async function calculateOption(inputs: OptionInputs) {\r\n  // Simulate a short delay (e.g., API call, computation time, etc.)\r\n  await new Promise((resolve) => setTimeout(resolve, 800));\r\n\r\n  const {\r\n    stockPrice: S,\r\n    strikePrice: X,\r\n    interestRate: r,\r\n    dividendYield: q,\r\n    timeToExpiration: t,\r\n    volatility: sigma,\r\n  } = inputs;\r\n\r\n  // Compute d1, d2 according to the Black–Scholes model:\r\n  const d1 =\r\n    (Math.log(S / X) + (r - q + 0.5 * sigma * sigma) * t) /\r\n    (sigma * Math.sqrt(t));\r\n  const d2 = d1 - sigma * Math.sqrt(t);\r\n\r\n  // Discount factors\r\n  const eNegQT = Math.exp(-q * t);\r\n  const eNegRT = Math.exp(-r * t);\r\n\r\n  // Calculate N(d1), N(d2), etc., using the normalCDF function from simple-statistics\r\n  const N_d1 = normalCDF(d1);\r\n  const N_d2 = normalCDF(d2);\r\n  const N_negd1 = normalCDF(-d1);\r\n  const N_negd2 = normalCDF(-d2);\r\n\r\n  // Black–Scholes formulas for European Call/Put with continuous dividend yield:\r\n  const callOptionPrice = S * eNegQT * N_d1 - X * eNegRT * N_d2;\r\n  const putOptionPrice = X * eNegRT * N_negd2 - S * eNegQT * N_negd1;\r\n\r\n  // Delta for a call option\r\n  const deltaCall = eNegQT * N_d1;\r\n\r\n  return {\r\n    callOptionPrice: callOptionPrice.toFixed(2),\r\n    putOptionPrice: putOptionPrice.toFixed(2),\r\n    impliedVolatility: (sigma * 100).toFixed(1) + \"%\",\r\n    delta: deltaCall.toFixed(3),\r\n    timestamp: new Date().toISOString(),\r\n    callFormula: \"C = S e^(-q t) N(d1) - X e^(-r t) N(d2)\",\r\n    putFormula: \"P = X e^(-r t) N(-d2) - S e^(-q t) N(-d1)\",\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAWA,yEAAyE;AACzE,SAAS,UAAU,CAAS;IAC1B,OAAO,MAAM,CAAC,IAAI,sKAAG,GAAG,CAAC,IAAI,KAAK,KAAK,CAAC;AAC1C;AAEO,eAAe,uCAAa,GAAb,gBAAgB,MAAoB;IACxD,kEAAkE;IAClE,MAAM,IAAI,QAAQ,CAAC,UAAY,WAAW,SAAS;IAEnD,MAAM,EACJ,YAAY,CAAC,EACb,aAAa,CAAC,EACd,cAAc,CAAC,EACf,eAAe,CAAC,EAChB,kBAAkB,CAAC,EACnB,YAAY,KAAK,EAClB,GAAG;IAEJ,uDAAuD;IACvD,MAAM,KACJ,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,MAAM,QAAQ,KAAK,IAAI,CAAC,IACpD,CAAC,QAAQ,KAAK,IAAI,CAAC,EAAE;IACvB,MAAM,KAAK,KAAK,QAAQ,KAAK,IAAI,CAAC;IAElC,mBAAmB;IACnB,MAAM,SAAS,KAAK,GAAG,CAAC,CAAC,IAAI;IAC7B,MAAM,SAAS,KAAK,GAAG,CAAC,CAAC,IAAI;IAE7B,oFAAoF;IACpF,MAAM,OAAO,UAAU;IACvB,MAAM,OAAO,UAAU;IACvB,MAAM,UAAU,UAAU,CAAC;IAC3B,MAAM,UAAU,UAAU,CAAC;IAE3B,+EAA+E;IAC/E,MAAM,kBAAkB,IAAI,SAAS,OAAO,IAAI,SAAS;IACzD,MAAM,iBAAiB,IAAI,SAAS,UAAU,IAAI,SAAS;IAE3D,0BAA0B;IAC1B,MAAM,YAAY,SAAS;IAE3B,OAAO;QACL,iBAAiB,gBAAgB,OAAO,CAAC;QACzC,gBAAgB,eAAe,OAAO,CAAC;QACvC,mBAAmB,CAAC,QAAQ,GAAG,EAAE,OAAO,CAAC,KAAK;QAC9C,OAAO,UAAU,OAAO,CAAC;QACzB,WAAW,IAAI,OAAO,WAAW;QACjC,aAAa;QACb,YAAY;IACd;AACF;;;IA7CsB;;AAAA,+OAAA"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}